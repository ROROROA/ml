# Dockerfile for training and deployment
# 使用多阶段构建来减小最终镜像的大小

# --- Builder Stage ---
FROM python:3.9-slim as builder

# 设置工作目录
WORKDIR /app

# 安装 Poetry
RUN pip install poetry

# 复制依赖定义文件
COPY pyproject.toml poetry.lock ./

# 安装项目依赖 (只安装，不创建 venv)
RUN poetry config virtualenvs.create false && \
    poetry install --no-root --no-dev

# --- Final Stage ---
FROM python:3.9-slim

# 设置工作目录
WORKDIR /app

# 从 builder 阶段复制已安装的依赖
COPY --from=builder /usr/local/lib/python3.9/site-packages /usr/local/lib/python3.9/site-packages

# 复制项目源代码
COPY ./src ./src
COPY ./configs ./configs
COPY ./feature_repo ./feature_repo

# 设置 Python 路径，让解释器能找到我们的模块
ENV PYTHONPATH="/app"

# 默认入口点（可以被 Prefect 或其他命令覆盖）
CMD ["bash"]
